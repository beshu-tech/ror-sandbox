readonlyrest:
  ssl:
    enable: true
    keystore_file: "ror-keystore.jks"
    keystore_pass: readonlyrest
    key_pass: readonlyrest

  audit:
    enabled: true
    outputs: [index]

  access_control_rules:

    - name: "KIBANA"
      type: allow
      auth_key: kibana:kibana
      verbosity: error

    - name: "Admins"
      groups: [Administrators]

    - name: "My users (tenancy picked)"
      groups_or: [ "@{acl:current_group}" ]
      indices: [ 'ix_@explode{acl:available_groups}#{replace_all("group_", "")}*' ]
      kibana:
        access: ro

    - name: "My users (no tenancy picked)"
      groups_or: [ "*" ]
      headers_or: [ "~x-ror-current-group:*" ]
      indices: [ 'ix_@explode{acl:available_groups}#{replace_all("group_", "")}*' ]
      kibana:
        access: ro

  users:

  - username: admin
    auth_key: admin:admin
    groups:
      - id: "Administrators"
        name: "Administrators"
  
  - username: "*"
    groups:
      - local_group:
          id: "group_a"
          name: "Group A"
        external_group_ids: [ "grp1" ]
      - local_group:
          id: "group_b"
          name: "Group B"
        external_group_ids: [ "grp2" ]
    ldap_auth: 
      name: "ldap1"
      groups: [ "*" ]

  ldaps:

    - name: ldap1
      host: "${env:LDAP_HOST}"
      port: ${env:LDAP_PORT}
      ssl_enabled: false
      ssl_trust_all_certs: true

      bind_dn: "uid=admin,ou=people,dc=example,dc=com"
      bind_password: "${env:LDAP_ADMIN_PASSWORD}"

      users:
        search_user_base_DN: "ou=People,dc=example,dc=com"
        user_id_attribute: "uid"
      groups:
        search_groups_base_DN: "ou=Groups,dc=example,dc=com"
        unique_member_attribute: "uniqueMember"  

      cache_ttl: 10s
