version: "3.8"
services:

  es-ror:
    build:
      context: .
      dockerfile: images/es/${ES_DOCKERFILE}
      args:
        ES_VERSION: $ES_VERSION
        ROR_VERSION: $ROR_ES_VERSION
        ROR_FILE: $ES_ROR_FILE
    ports:
      - "19200:9200"
      - "19300:9300"
      - "5000:5000"
    environment:
      - cluster.name=ror-es-cluster
      - node.name=es-ror-single
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5000"
      - ES_VERSION=$ES_VERSION
    healthcheck:
      test: [ "CMD", "curl", "-fk", "-u", "admin:admin", "http://localhost:9200/_cluster/health" ]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s
    networks:
      - es-ror-network
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kbn-ror:
    build:
      context: .
      dockerfile: images/kbn/${KBN_DOCKERFILE}
      args:
        KBN_VERSION: $KBN_VERSION
        ROR_VERSION: $ROR_KBN_VERSION
        ROR_FILE: $KBN_ROR_FILE
        ROR_ACTIVATION_KEY: $ROR_ACTIVATION_KEY
    depends_on:
      es-ror:
        condition: service_healthy
    ports:
      - "15601:5601"
    environment:
      ELASTIC_USER_PASSWORD: elastic
      ES_API_URL: http://es-ror:9200
    networks:
      - es-ror-network
    ulimits:
      memlock:
        soft: -1
        hard: -1

  apm-server:
    image: docker.elastic.co/apm/apm-server:8.14.3
    command: >
     apm-server -e
       -E apm-server.rum.enabled=true
       -E setup.kibana.host=kbn-ror:5601
       -E setup.template.settings.index.number_of_replicas=0
       -E apm-server.kibana.enabled=true
       -E apm-server.kibana.host=kbn-ror:5601
       -E output.elasticsearch.hosts=["es-ror:9200"]
       -E output.elasticsearch.username=kibana
       -E output.elasticsearch.password=kibana
    depends_on:
     - es-ror
     - kbn-ror
    networks:
      - es-ror-network

  server1:
    build:
      context: .
      dockerfile: images/ubuntu/Dockerfile
    command: node /example-app/app.js
    expose: 
     - 3000
    networks:
      - es-ror-network

networks:
  es-ror-network:
    driver: bridge
