services:

  es-ror:
    build:
      context: .
      dockerfile: images/ror-cluster/es/${ES_DOCKERFILE}
      args:
        ES_VERSION: $ES_VERSION
        ROR_VERSION: $ROR_ES_VERSION
        ROR_FILE: $ES_ROR_FILE
    depends_on:
      es-xpack:
        condition: service_healthy
    ports:
      - "19200:9200"
      - "19300:9300"
      - "5000:5000"
    environment:
      - cluster.name=ror-es-cluster
      - node.name=es-ror-single
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_VERSION=$ES_VERSION
    healthcheck:
      test: [ "CMD", "curl", "-fk", "-u", "kibana:kibana", "https://localhost:9200/_cluster/health" ]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s
    networks:
      - ror-poc-network
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: '768M'

  kbn-ror:
    build:
      context: .
      dockerfile: images/ror-cluster/kbn/${KBN_DOCKERFILE}
      args:
        KBN_VERSION: $KBN_VERSION
        ROR_VERSION: $ROR_KBN_VERSION
        ROR_FILE: $KBN_ROR_FILE
        ROR_ACTIVATION_KEY: $ROR_ACTIVATION_KEY
    depends_on:
      es-ror:
        condition: service_healthy
    ports:
      - "15601:5601"
    environment:
      ELASTIC_USER_PASSWORD: elastic
      ES_API_URL: https://es-ror:9200
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:5601/api/status" ]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s
    networks:
      - ror-poc-network
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: '768M'

  web-server:
    image: nginx:alpine
    depends_on:
      es-ror:
        condition: service_healthy
      kbn-ror:
        condition: service_healthy
    ports:
      - "18000:80"
    volumes:
      - ./ror_poc_iframe.html:/usr/share/nginx/html/index.html
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:80" ]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 30s
    networks:
      - ror-poc-network
    deploy:
      resources:
        limits:
          memory: '128M'

  es-xpack:
    build:
      context: .
      dockerfile: images/xpack-cluster/es/Dockerfile
      args:
        ES_VERSION: $ES_VERSION
    ports:
      - "29200:9200"
      - "29300:9300"
      - "5005:5000"
    environment:
      - cluster.name=xpack-es-cluster
      - node.name=es-xpack-single
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_VERSION=$ES_VERSION
    healthcheck:
      test: [ "CMD", "curl", "-fk", "-u", "elastic:elastic", "https://localhost:9200/_security/user/kibana_system/_password", "-XPOST", "-H", "Content-Type: application/json", "-d", "{\"password\": \"elastic\"}" ]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s
    networks:
      - ror-poc-network
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: '768M'

  kbn-xpack:
    build:
      context: .
      dockerfile: images/xpack-cluster/kbn/Dockerfile
      args:
        KBN_VERSION: $KBN_VERSION
    depends_on:
      es-xpack:
        condition: service_healthy
    ports:
      - "25601:5601"
    environment:
      ES_API_URL: https://es-xpack:9200
    networks:
      - ror-poc-network
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: '768M'

networks:
  ror-poc-network:
    driver: bridge
