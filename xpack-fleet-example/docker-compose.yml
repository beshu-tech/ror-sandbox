services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    hostname: elasticsearch
    user: "1000"
    volumes:
      - ./certs:/usr/share/elasticsearch/config/certs:z
    ports:
      - 9200:9200
    environment:
      - node.name=elasticsearch
      - cluster.name=fleet-elasticsearch
      - ELASTIC_PASSWORD=elastic
      - bootstrap.memory_lock=false
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/elasticsearch.key
      - xpack.security.http.ssl.certificate=certs/elasticsearch.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca.crt
      - xpack.security.http.ssl.verification_mode=certificate
      - xpack.security.http.ssl.client_authentication=optional
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/elasticsearch.key
      - xpack.security.transport.ssl.certificate=certs/elasticsearch.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.client_authentication=optional
    mem_limit: 2147483648 # ~ 2gb
    healthcheck:
      test: [ "CMD", "curl", "-f", "--cacert", "/usr/share/elasticsearch/config/certs/ca.crt", "-u", "elastic:elastic", "https://localhost:9200/_security/user/kibana_system/_password", "-XPOST", "-H", "Content-Type: application/json", "-d", "{\"password\": \"elastic\"}" ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    depends_on:
      elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:8.12.2
    hostname: kibana
    volumes:
      - ./certs:/usr/share/kibana/config/certs:z
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:Z
    ports:
      - 5601:5601
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=elastic
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca.crt
      - SERVER_SSL_ENABLED=true
      - SERVER_SSL_CERTIFICATE=config/certs/kibana.crt
      - SERVER_SSL_KEY=config/certs/kibana.key
      - SERVER_SSL_CERTIFICATEAUTHORITIES=config/certs/ca.crt
    mem_limit: 2147483648 # ~ 2gb
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -I -s --cacert config/certs/ca.crt https://kibana:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  fleet-server:
    depends_on:
      kibana:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/beats/elastic-agent:8.12.2
    hostname: fleet-server
    volumes:
      - ./certs:/certs:z
    ports:
      - 8220:8220
    restart: always
    user: "1000"
    environment:
      - FLEET_ENROLL=1
      - FLEET_SERVER_POLICY_ID=fleet-server-policy
      - FLEET_SERVER_ENABLE=1
      - KIBANA_FLEET_SETUP=1
      - KIBANA_HOST=https://kibana:5601
      - FLEET_URL=https://fleet-server:8220
      - FLEET_SERVER_ELASTICSEARCH_HOST=https://elasticsearch:9200
      - FLEET_CA=/certs/ca.crt
      - KIBANA_FLEET_USERNAME=elastic
      - KIBANA_FLEET_PASSWORD=elastic
      - FLEET_SERVER_CERT=/certs/fleet-server.crt
      - FLEET_SERVER_CERT_KEY=/certs/fleet-server.key
      - FLEET_SERVER_ELASTICSEARCH_CA=/certs/ca.crt
      - KIBANA_FLEET_CA=/certs/ca.crt

  fleet-initializer:
    build:
      context: fleet-initializer
      dockerfile: Dockerfile
    hostname: fleet-initializer
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy

  agent1:
    build:
      context: agent1
      dockerfile: Dockerfile
    hostname: agent1
    restart: always
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    volumes:
      - ./certs:/certs:z
    ports:
      - 8200:8200
    user: root
    environment:
      - FLEET_ENROLL=1
      - FLEET_URL=https://fleet-server:8220
      - FLEET_CA=/certs/ca.crt

  service1:
    build:
      context: service1
      dockerfile: Dockerfile
    hostname: service1
    command: node /example-app/app.js
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    expose:
      - 3000
    ports:
      - "3000:3000"
    volumes:
      - ./certs:/certs:z
    environment:
      - ELASTIC_APM_SERVER_CA_CERT_FILE=/certs/ca.crt

  traffic-simulator:
    build:
      context: traffic-simulator
      dockerfile: Dockerfile
    hostname: traffic-simulator
    depends_on:
      service1:
        condition: service_started